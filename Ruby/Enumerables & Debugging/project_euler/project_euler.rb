# ‚è± 30 mins

# Problem 1 
#If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.

def problem1
  sum = 0
  iterator = 0
  while iterator < 1000
    if multiple?(iterator)
      sum += iterator
    end
    iterator += 1
  end
  return sum
end

def multiple?(num)
  return true if num % 3 == 0 || num % 5 == 0
  return false
end

# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def problem2
  series = [1,2]
  num = 0
  sum = 0
  while num < 4000000
    num = series[-1] + series[-2]
    sum += num if num.even?
    series << num
  end
  print sum
end

# Problem 3
# The prime factors of 13195 are 5, 7, 13 and 29.
# What is the largest prime factor of the number 600851475143 ?
